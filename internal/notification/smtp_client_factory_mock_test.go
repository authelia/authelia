// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/authelia/authelia/v4/internal/notification (interfaces: SMTPClientFactory)
//
// Generated by this command:
//
//	mockgen -package notification -destination smtp_client_factory_mock_test.go -mock_names SMTPClientFactory=MockSMTPClientFactory github.com/authelia/authelia/v4/internal/notification SMTPClientFactory
//

// Package notification is a generated GoMock package.
package notification

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockSMTPClientFactory is a mock of SMTPClientFactory interface.
type MockSMTPClientFactory struct {
	ctrl     *gomock.Controller
	recorder *MockSMTPClientFactoryMockRecorder
	isgomock struct{}
}

// MockSMTPClientFactoryMockRecorder is the mock recorder for MockSMTPClientFactory.
type MockSMTPClientFactoryMockRecorder struct {
	mock *MockSMTPClientFactory
}

// NewMockSMTPClientFactory creates a new mock instance.
func NewMockSMTPClientFactory(ctrl *gomock.Controller) *MockSMTPClientFactory {
	mock := &MockSMTPClientFactory{ctrl: ctrl}
	mock.recorder = &MockSMTPClientFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSMTPClientFactory) EXPECT() *MockSMTPClientFactoryMockRecorder {
	return m.recorder
}

// GetClient mocks base method.
func (m *MockSMTPClientFactory) GetClient() (SMTPClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClient")
	ret0, _ := ret[0].(SMTPClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClient indicates an expected call of GetClient.
func (mr *MockSMTPClientFactoryMockRecorder) GetClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClient", reflect.TypeOf((*MockSMTPClientFactory)(nil).GetClient))
}
