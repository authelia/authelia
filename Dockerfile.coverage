# ========================================
# ===== Build image for the frontend =====
# ========================================
FROM node:23-alpine@sha256:340cd3926b5116aae1207d6ca1e444d1009aad687c4ad37aa3afbe8a3db591d5 AS builder-frontend

WORKDIR /node/src/app

COPY .local /root/.local
COPY web ./

# Install the dependencies and build
RUN yarn global add pnpm && \
    pnpm install --frozen-lockfile && pnpm coverage

# =======================================
# ===== Build image for the backend =====
# =======================================
FROM golang:1.23.3-alpine@sha256:25db3a0508ff009054bf467f25e1ab395fced0f93b69459dd736ae523e61c781 AS builder-backend

WORKDIR /go/src/app

RUN \
	echo ">> Downloading required apk's..." && \
	apk --no-cache add gcc musl-dev

COPY go.mod go.sum ./

RUN \
	echo ">> Downloading go modules..." && \
	go mod download

COPY / ./

# Prepare static files to be embedded in Go binary
COPY --from=builder-frontend /node/src/internal/server/public_html internal/server/public_html

ARG LDFLAGS_EXTRA
RUN \
	mv api internal/server/public_html/api && \
	cd cmd/authelia && \
	chmod 0666 /go/src/app/.healthcheck.env && \
	echo ">> Starting go build (coverage via -cover)..." && \
	CGO_ENABLED=1 CGO_CPPFLAGS="-D_FORTIFY_SOURCE=2 -fstack-protector-strong" CGO_LDFLAGS="-Wl,-z,relro,-z,now" go build -cover -covermode=atomic \
	-ldflags "${LDFLAGS_EXTRA}" -o authelia

# ===================================
# ===== Authelia official image =====
# ===================================
FROM alpine:3.20.3@sha256:1e42bbe2508154c9126d48c2b8a75420c3544343bf86fd041fb7527e017a4b4a

RUN apk --no-cache add ca-certificates tzdata wget

WORKDIR /app

COPY --from=builder-backend /go/src/app/cmd/authelia/authelia /go/src/app/LICENSE /go/src/app/healthcheck.sh /go/src/app/.healthcheck.env ./

EXPOSE 9091

VOLUME /config

ENV PATH="/app:${PATH}" \
	GOCOVERDIR="/authelia/coverage/" \
    X_AUTHELIA_CONFIG="/config/configuration.yml"

CMD ["authelia"]
HEALTHCHECK --interval=30s --timeout=3s CMD /app/healthcheck.sh
