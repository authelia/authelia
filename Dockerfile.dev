# ========================================
# ===== Build image for the frontend =====
# ========================================
FROM node:24-alpine@sha256:77f3c4d1f33c17dfa4af4b0add57d86957187873e313c2c37f52831d117645c8 AS builder-frontend

WORKDIR /node/src/app

COPY --link web ./

# Install the dependencies and build
RUN \
	yarn global add pnpm && \
	pnpm install --frozen-lockfile && \
	pnpm coverage

# =======================================
# ===== Build image for the backend =====
# =======================================
FROM golang:1.25.2-bookworm@sha256:42d8e9dea06f23d0bfc908826455213ee7f3ed48c43e287a422064220c501be9 AS builder-backend

WORKDIR /go/src/app

COPY --link go.mod go.sum ./

RUN \
	echo ">> Downloading go modules..." && \
	go mod download

COPY --link / ./

# Prepare static files to be embedded in Go binary
COPY --link --from=builder-frontend /node/src/internal/server/public_html internal/server/public_html

ARG LDFLAGS_EXTRA

RUN \
	mv api internal/server/public_html/api && \
	echo ">> Starting go build..." && \
	GOEXPERIMENT="nosynchashtriemap" CGO_ENABLED=1 CGO_CPPFLAGS="-D_FORTIFY_SOURCE=2 -fstack-protector-strong" CGO_LDFLAGS="-Wl,-z,relro,-z,now" go build \
	-tags dev -ldflags "-linkmode=external -s -w ${LDFLAGS_EXTRA}" -trimpath -buildmode=pie -o authelia ./cmd/authelia

# ===================================
# ===== Authelia official image =====
# ===================================
FROM authelia/base:latest@sha256:6510f20c8b9c533ab4309e4d0ac02aaab39e6be6020547706fd2f242ccee73d6

WORKDIR /app

ENV \
	PATH="/app:${PATH}" \
	PUID=0 \
	PGID=0 \
	X_AUTHELIA_CONFIG="/config/configuration.yml"

COPY --link --from=builder-backend /go/src/app/authelia /go/src/app/LICENSE /go/src/app/entrypoint.sh /go/src/app/healthcheck.sh ./

COPY --link	--from=builder-backend --chmod=666 /go/src/app/.healthcheck.env ./

EXPOSE 9091

ENTRYPOINT ["/app/entrypoint.sh"]
HEALTHCHECK --interval=30s --timeout=3s --start-period=1m CMD /app/healthcheck.sh
